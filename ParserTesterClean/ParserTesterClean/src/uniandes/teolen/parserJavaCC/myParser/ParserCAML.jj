/**
 * JavaCC file
 */
 
options {
  IGNORE_CASE = false;
  STATIC = false;
}
PARSER_BEGIN(ParserCAML)
package uniandes.teolen.parserJavaCC.myParser;

import java.util.*;
 
public class ParserCAML {
	ArrayList<Integer> valoresClaves = new ArrayList<Integer>();
	Integer articleTimes = 0;
	Integer articleErrors = 0;
} 

PARSER_END(ParserCAML)

SKIP :
{
 	" " | "\r" | "\t" | "\n"
}

TOKEN : /* OPERATORS */
{
    < INICIO: "type">
|     < #MINUSCULA: ["a" - "z"] >
| 	  < #MAYUSCULA: ["A" - "Z"] >
|     < NAME: (< MAYUSCULA >)(< MAYUSCULA > | < MINUSCULA >|"_"|".")*>
|     < ID: (< NAME > | ["0"-"9"])+>
| 	  < ATRIBUTE: < MAYUSCULA >(< MINUSCULA >|<  MAYUSCULA >)* >
}

void hr():
{}
{
  (book() | article() | booklet() | conference() | inbook() | incollection() | inproceedings() | manual() | masterthesis() |
  misc() | phdthesis() | proceedings() | techreport() | unpublished())* {
	valoresClaves.add(articleTimes);
	valoresClaves.add(articleErros);
  }
}

void book():
{ }
{
	"@book{" < ID > "," 
}

void article():
{ }
{
	"@article{" < ID > "," 
} 
void booklet():
{ }
{
	"@booklet{" < ID > "," 
}
void conference():
{ }
{
	"@conference{" < ID > "," 
}
void inbook():
{ }
{
	"@inbook{" < ID > "," 
}
void incollection():
{ }
{
	"@incollection{" < ID > "," 
}
void inproceedings():
{ }
{
	"@inproceedings{" < ID > "," 
}
void manual():
{ }
{
	"@manual{" < ID > "," 
}
void masterthesis():
{ }
{
	"@masterthesis{" < ID > "," 
}
void misc():
{ }
{
	"@misc{" < ID > "," 
}
void phdthesis():
{ }
{
	"@phdthesis{" < ID > "," 
}
void proceedings():
{ }
{
	"@proceedigns{" < ID > "," 
}
void techreport():
{ }
{
	"@techreport{" < ID > "," 
}
void unpublished():
{ }
{
	"@unpublished{" < ID > "," 
}



